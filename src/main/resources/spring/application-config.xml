<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    
<!--     Uncomment and add your base-package here: -->
    <context:component-scan base-package="com.example.shiro.api"/>
	
<!-- 	<bean id="springDelegatingFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"> -->
<!-- 	    <property name="securityManager" ref="securityManager"/> -->
	    <!-- override these for application-specific URLs if you like:-->
<!-- 	    <property name="loginUrl" value="/login.html"/> -->
	    
	    <!-- <property name="successUrl" value="/home.jsp"/>
	    <property name="unauthorizedUrl" value="/unauthorized.jsp"/> -->
	    <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean  -->
	    <!-- defined will be automatically acquired and available via its beanName in chain        -->
	    <!-- definitions, but you can perform instance overrides or name aliases here if you like: -->
	    <!-- <property name="filters">
	        <util:map>
	            <entry key="anAlias" value-ref="someFilter"/>
	        </util:map>
	    </property> -->
<!-- 	    <property name="filterChainDefinitions"> -->
<!-- 	        <value> -->
<!-- 	            # some example chain definitions: -->
<!-- 	            /admin/** = authc, roles[admin] -->
<!-- 	            /docs/** = authc, perms[document:read] -->
<!-- 	            /lib/** = anon -->
<!-- 	            /app/** = anon -->
<!-- 	            /** = authc -->
<!-- 	            # more URL-to-FilterChain definitions here -->
<!-- 	        </value> -->
<!-- 	    </property> -->
<!-- 	</bean> -->
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	    <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
	    <property name="realm" ref="myRealm"/>
	    <!-- By default the servlet container sessions will be used.  Uncomment this line
	         to use shiro's native sessions (see the JavaDoc for more): -->
	    <!-- <property name="sessionMode" value="native"/> -->
	</bean>
	
<!-- 	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/> -->
	
	<bean id="myRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/shiroExample"/>
        <property name="username" value="root"/>
        <property name="password" value="c0r0l1n3"/>
    </bean>
	
</beans>
